version: '3'

services:
    rsshub:
        image: diygod/rsshub
        restart: always
        ports:
            - '1200:1200'
        environment:
            NODE_ENV: production
            CACHE_TYPE: redis
            REDIS_URL: 'redis://redis:6379/'
            PUPPETEER_WS_ENDPOINT: 'ws://browserless:3000'
            # Auth
            HTTP_BASIC_AUTH_NAME: user
            HTTP_BASIC_AUTH_PASS: password
            # Pixiv 
            PIXIV_USERNAME: user
            PIXIV_PASSWORD: password
            # YOUTUBE
            YOUTUBE_KEY: key
        depends_on:
            - redis
            - browserless

    browserless:
        image: browserless/chrome
        restart: always

    redis:
        image: redis:alpine
        restart: always
        volumes:
            - redis-data:/data

    database.postgres:
        image: postgres:alpine
        container_name: postgres
        environment:
            - POSTGRES_PASSWORD=password # please change the password
        volumes:
            - ~/postgres/data/:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host
        restart: always

    service.rss:
        image: wangqiru/ttrss:latest
        container_name: ttrss
        ports:
            - 181:80
        environment:
            - SELF_URL_PATH=https://rss.user.com/ # please change to your own domain
            - DB_HOST=database.postgres
            - DB_PORT=5432
            - DB_NAME=ttrss
            - DB_USER=postgres
            - DB_PASS=password # please change the password
            - ENABLE_PLUGINS=auth_internal,fever # auth_internal is required. Plugins enabled here will be enabled for all users as system plugins
        stdin_open: true
        tty: true
        restart: always
        command: sh -c 'sh /wait-for.sh $$DB_HOST:$$DB_PORT -- php /configure-db.php && exec s6-svscan /etc/s6/'

    service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page
        image: wangqiru/mercury-parser-api:latest
        container_name: mercury
        expose:
            - 3000
        restart: always

    service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page
        image: wangqiru/opencc-api-server:latest
        container_name: opencc
        environment:
            - NODE_ENV=production
        expose:
            - 3000
        restart: always

    utility.watchtower:
        container_name: watchtower
        image: containrrr/watchtower:latest
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - WATCHTOWER_CLEANUP=true
            - WATCHTOWER_POLL_INTERVAL=86400
        restart: always

volumes:
    redis-data: